library(CausalArima)
library(CausalArima)
y <- rnorm(800, sd = 1)
dates <- seq.Date(from = as.Date("2005-01-01"), by = "week", length.out = 800)
# Generating predictors
x1 <- rnorm(800, mean = 2, sd = 0.5)
x2 <- rnorm(800, mean = 3, sd = 0.5)
y <- y -2*x1 + x2
# Adding a fictional intervention
int.date <- as.Date("2019-05-11")
horizon <- c(as.Date("2019-12-07"), as.Date("2020-02-15"), as.Date("2020-04-25"))
y.new <- y ; y.new[dates >= int.date] <- y.new[dates >= int.date]*1.40
# Causal effect estimation
start<-as.numeric(strftime(as.Date(dates[1], "%Y-%m-%d"), "%u"))
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "aic", dates = dates, xreg = data.frame(x1,x2), int.date = int.date)
# Table of the estimated temporal average effects
impact(ce)
data(sales)
sales$Dates <- as.Date(sales$Dates, format = "%Y-%m-%d")
# install.packages(c("devtools", "kableExtra","tseries" ))
# devtools::install_github("FMenchetti/CausalArima")
library("CausalArima")
library("kableExtra")
library("tseries")
data(sales)
sales$Dates <- as.Date(sales$Dates, format = "%Y-%m-%d")
int.date <- as.Date("2018-10-04", format = "%Y-%m-%d")
dates <- sales$Dates
y <- sales$Sales
ggplot(data = sales, aes(x = Dates, y1 = TruePrice, y2 = Price)) +
geom_line(y2) +
geom_vline(xintercept = int.date,
linetype = "dashed",
color = "red", size = 1)
ggplot(data = sales, aes(x = Dates, y1 = TruePrice, y2 = Price)) +
geom_line(Price) +
geom_vline(xintercept = int.date,
linetype = "dashed",
color = "red", size = 1)
ggplot(data = sales, aes(x = Dates)) +
geom_line(aes(y = Price)) +
geom_line(aes(y = TruePrice)))
ggplot(data = sales, aes(x = Dates)) +
geom_line(aes(y = Price)) +
geom_line(aes(y = TruePrice))
ggplot(data = sales, aes(x = Dates)) +
geom_line(aes(y = Price), linetype = "dashed", color = "blue") +
geom_line(aes(y = TruePrice))
ggplot(data = sales, aes(x = Dates)) +
geom_line(aes(y = Price), linetype = "dashed", color = "blue") +
geom_line(aes(y = TruePrice)) +
geom_vline(aes(xintercept = int.date),
linetype = "dashed",
color = "red", size = 1)
prova <- sales[, -"Price"]
prova <- sales[, - which(colnames(sales)== "Price")]
colnames(prova)
X_new <- X
horizon <- c(int.date + 7, int.date + 30, int.date + 90)
Y <- ts(y, frequency = 7) # response variable, weekly data
X <- sales[, c("Price","hol", "dec.sun","sat","sun","mon", "tue","wed", "thr") ]
X_new <- X
X_new$log_Price <- log(X_new$Price)
X_new$Price <- NULL
View(X_new)
set.seed(1)
x1 <- 100 + arima.sim(model = list(ar = 0.999), n = 100)
y <- 1.2 * x1 + rnorm(100)
y[71:100] <- y[71:100] + 10
data <- cbind(y, x1)
time.points <- seq.Date(as.Date("2014-01-01"), by = 1, length.out = 100)
time.points[71]
library(CausalArima)
y <- 0.5*seq(0.5, 250, by = 0.5) + rnorm(500, sd = 6)
dates <- seq.Date(from = as.Date("2014-01-05"), by = "days", length.out = 500)
# Adding a fictional intervention
int.date <- as.Date("2015-04-01")
horizon <- c(as.Date("2015-04-10"), as.Date("2015-04-20"))
y.new <- y ; y.new[dates >= int.date] <- y.new[dates >= int.date]*1.25
# Causal effect estimation
start<-as.numeric(strftime(as.Date(dates[1], "%Y-%m-%d"), "%u"))
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "aic", dates = dates, int.date = int.date)
# Plot
plot(ce, type = "forecast")
plot(ce, type = "forecast", horizon = horizon)
library(CausalArima)
y <- 0.5*seq(0.5, 250, by = 0.5) + rnorm(500, sd = 6)
dates <- seq.Date(from = as.Date("2014-01-05"), by = "days", length.out = 500)
# Adding a fictional intervention
int.date <- as.Date("2015-04-01")
horizon <- c(as.Date("2015-04-10"), as.Date("2015-04-20"))
y.new <- y ; y.new[dates >= int.date] <- y.new[dates >= int.date]*1.25
# Causal effect estimation
start<-as.numeric(strftime(as.Date(dates[1], "%Y-%m-%d"), "%u"))
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "aic", dates = dates, int.date = int.date)
# Plot
plot(ce, type = "forecast")
plot(ce, type = "forecast", horizon = horizon)
library(CausalArima)
y <- 0.5*seq(0.5, 250, by = 0.5) + rnorm(500, sd = 6)
dates <- seq.Date(from = as.Date("2014-01-05"), by = "days", length.out = 500)
# Adding a fictional intervention
int.date <- as.Date("2015-04-01")
horizon <- c(as.Date("2015-04-10"), as.Date("2015-04-20"))
y.new <- y ; y.new[dates >= int.date] <- y.new[dates >= int.date]*1.25
# Causal effect estimation
start<-as.numeric(strftime(as.Date(dates[1], "%Y-%m-%d"), "%u"))
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "aic", dates = dates, int.date = int.date)
# Plot
plot(ce, type = "forecast")
y <- 0.5*seq(0.5, 250, by = 0.5) + rnorm(500, sd = 6)
dates <- seq.Date(from = as.Date("2014-01-05"), by = "days", length.out = 500)
# Adding a fictional intervention
int.date <- as.Date("2015-04-01")
horizon <- c(as.Date("2015-04-10"), as.Date("2015-04-20"))
y.new <- y ; y.new[dates >= int.date] <- y.new[dates >= int.date]*1.25
# Causal effect estimation
start<-as.numeric(strftime(as.Date(dates[1], "%Y-%m-%d"), "%u"))
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "aic", dates = dates, int.date = int.date)
# Plot
plot(ce, type = "forecast")
plot(ce, type = "forecast", horizon = horizon)
y <- 0.5*seq(0.5, 250, by = 0.5) + rnorm(500, sd = 6)
dates <- seq.Date(from = as.Date("2014-01-05"), by = "days", length.out = 500)
# Adding a fictional intervention
int.date <- as.Date("2015-04-01")
horizon <- c(as.Date("2015-04-10"), as.Date("2015-04-20"))
y.new <- y ; y.new[dates >= int.date] <- y.new[dates >= int.date]*1.25
start<-as.numeric(strftime(as.Date(dates[1], "%Y-%m-%d"), "%u"))
plot(y.new, type = "l")
y <- ts(y.new, frequency = 1)
### STEP 1. Subsetting the data: before and after the intervention date
ind<-dates>=int.date
y.00<-y[!ind]
y.01<-y[ind]
if(!is.null(xreg)) {
xreg0<-xreg[!ind,]
xreg1<-xreg[ind,]
} else {
xreg0 <- NULL
xreg1 <- NULL
}
length(y.new)
rm(list = ls())
y <- 0.5*seq(0.5, 250, by = 0.5) + rnorm(500, sd = 6)
dates <- seq.Date(from = as.Date("2014-01-05"), by = "days", length.out = 500)
# Adding a fictional intervention
int.date <- as.Date("2015-04-01")
horizon <- c(as.Date("2015-04-10"), as.Date("2015-04-20"))
y.new <- y ; y.new[dates >= int.date] <- y.new[dates >= int.date]*1.25
xreg <- y - 2*rnorm(500)
y <- ts(y.new, frequency = 1)
### STEP 1. Subsetting the data: before and after the intervention date
ind<-dates>=int.date
y.00<-y[!ind]
y.01<-y[ind]
if(!is.null(xreg)) {
xreg0<-xreg[!ind,]
xreg1<-xreg[ind,]
} else {
xreg0 <- NULL
xreg1 <- NULL
}
xreg <- as.matrix(xreg)
if(!is.null(xreg)) {
xreg0<-xreg[!ind,]
xreg1<-xreg[ind,]
} else {
xreg0 <- NULL
xreg1 <- NULL
}
### STEP 2. Model estimation in the pre-intervention period
start<-as.numeric(strftime(as.Date(dates[1], "%Y-%m-%d"), "%u"))
frequency(y)
frequency(y.new)
model <- do.call("auto.arima", c(list(y = ts(y.00, start = start, frequency = frequency(y))),
list(ic = ic), list(xreg = xreg0), auto.args))
ic <- "bic"
model <- do.call("auto.arima", c(list(y = ts(y.00, start = start, frequency = frequency(y))),
list(ic = ic), list(xreg = xreg0), auto.args))
auto.args <- NULL
model <- do.call("auto.arima", c(list(y = ts(y.00, start = start, frequency = frequency(y))),
list(ic = ic), list(xreg = xreg0), auto.args))
library(forecast)
model <- do.call("auto.arima", c(list(y = ts(y.00, start = start, frequency = frequency(y))),
list(ic = ic), list(xreg = xreg0), auto.args))
summary(model)
### STEP 3. Forecasting the counterfactual outcome in the absence of intervention
h<-length(y.01)
fcast<-forecast(model, xreg = xreg1, h = h, level = 1-alpha)
alpha <- 0.05
fcast<-forecast(model, xreg = xreg1, h = h, level = 1-alpha)
mean.fcast.0<-as.numeric(fcast$mean)
forecasted_low<-as.numeric(fcast$lower)
forecasted_up<-as.numeric(fcast$upper)
### STEP 4. Causal effect computation: direct comparison between the observed outcome (y.01) and the
#           predicted counterfactual (mean.fcast.0)
causal.effect.0 <- y.01 - mean.fcast.0
prova <- simulate(model,  future = TRUE, nsim = h, xreg = xreg, boostrap = TRUE)
class(prova)
length(prova)
h
prova <- simulate(model,  future = TRUE, nsim = h, xreg = xreg1, boostrap = TRUE)
length(prova)
plot(prova, type = "l")
seed - 5
seed <- 5
setseed(seed)
set.seed(seed)
prova <- simulate(model,  future = TRUE, nsim = h, xreg = xreg1, boostrap = TRUE)
head(prova)
set.seed(seed)
prova <- simulate(model,  future = TRUE, nsim = h, xreg = xreg1, bootstrap = TRUE)
head(prova)
set.seed(seed)
head(simulate(model,  future = TRUE, nsim = h, xreg = xreg1, bootstrap = TRUE))
simulated <- matrix(NA, h, nboot)
nboot <- 10000
simulated <- matrix(NA, h, nboot)
sapply(simulated, function(x)(simulate(model,  future = TRUE, nsim = h, xreg = xreg1, bootstrap = TRUE)))
prova <- sapply(simulated, function(x)(simulate(model,  future = TRUE, nsim = h, xreg = xreg1, bootstrap = TRUE)))
simulated <- matrix(NA, h, nboot)
for(i in 1:nboot){
simulated[,i] <- simulate(model,  future = TRUE, nsim = h, xreg = xreg1, bootstrap = TRUE)
}
dim(simulated)
### stat1
stat1 <- y.01 - simulated
### stat2
stat2 <- apply(stat1, 2, FUN = cumsum)
stat1[1:5,1:5]
stat2[1:5,1:5]
29.66283+31.54412
29.66283+31.54412+28.04896
29.25843+33.26806+26.67628
head(seq(1, h, 1))
### stat3
stat3 <- apply(stat2, 2, FUN = function(x)(x/seq(1, h, 1)))
c(61.20695/2 , 89.25591/3, 120.18195/4)
c(62.78689/2 , 94.37220/3, 125.64748/4)
stat3[1:5,1:5]
hist(stat3[1,])
hist(stat3[1,], freq = FALSE)
qqnorm(scale(stat3[1,]))
min(stat3[1,])
max(stat3[1,])
sum(is.na(stat3[1,]))
sd1  <- apply(stat1, 1, sd)
dim(stat1)
dim(sd1)
length(sd1)
head(sd1)
sd(stat1[1,])
sd(stat1[2,])
sd(stat1[3,])
sd(stat1[4,])
identical(cumsum(rowMeans(stat1)), rowMeans(stat2))
length(rowMeans(stat1))
head(cumsum(rowMeans(stat1)))
length(rowMeans(stat2))
head(rowMeans(stat2))
sum(cumsum(rowMeans(stat1)) != rowMeans(stat2))
which(cumsum(rowMeans(stat1)) != rowMeans(stat2))
cumsum(rowMeans(stat1))[32]
rowMeans(stat2)[32]
### stat2
stat2 <- cumsum(stat1)
head(stat2)
dim(stat1)
### stat1
stat1 <- rowMeans(dist)
### Causal effect for each simulated counterfactual path
dist <- y.01 - simulated
### stat1
stat1 <- rowMeans(dist)
sd1  <- apply(dist, 1, sd)
z1 <- (stat1 - 0) / sd1
### stat2
stat2 <- cumsum(stat1)
head(stat2)
### stat1
dist1 <- y.01 - simulated
stat1 <- rowMeans(dist1)
sd1  <- apply(dist1, 1, sd)
z1 <- (stat1 - 0) / sd1
### stat2
dist2 <- apply(dist1, 2, cumsum)
stat2 <- rowMeans(dist2)
sd2 <- apply(dist2, 1, sd)
z2 <- (stat1 - 0) / sd2
### stat3
dist3 <- apply(dist2, 2, FUN = function(x)(x/seq(1, h, 1)))
stat3 <- rowMeans(dist3)
sd3 <- apply(dist3, 1, sd)
z3 <- (stat1 - 0) / sd3
head(stat2)
head(sd2)
library(CausalArima)
y <- 0.5*seq(0.5, 250, by = 0.5) + rnorm(500, sd = 6)
dates <- seq.Date(from = as.Date("2014-01-05"), by = "days", length.out = 500)
# Adding a fictional intervention
int.date <- as.Date("2015-04-01")
horizon <- c(as.Date("2015-04-10"), as.Date("2015-04-20"))
y.new <- y ; y.new[dates >= int.date] <- y.new[dates >= int.date]*1.25
# Plot
oldpar <- par(no.readonly = TRUE)
plot(y = y.new, x = dates, type = "l", col = "cadetblue", xlim = c(as.Date("2014-10-01"), tail(dates, 1)))
lines(y = y, x = dates, col = "orange")
# Causal effect estimation
start<-as.numeric(strftime(as.Date(dates[1], "%Y-%m-%d"), "%u"))
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "aic", dates = dates, int.date = int.date, nboot = 10000)
library(CausalArima)
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "aic", dates = dates, int.date = int.date, nboot = 10000)
dim(ce$norm$inf)
dim(ce$norm$boot)
dim(ce$boot$inf)
head(ce$norm$boot)
head(ce$boot$inf)
dim(ce$boot$inf)
head(ce$norm$inf)
print(ce, type = "norm", horizon = horizon)
print(ce, type = "boot", horizon = horizon)
print(ce, type = "boot")
summary(ce, type = "norm", horizon = horizon)
summary(ce, type = "boot", horizon = horizon)
library(CausalArima)
summary(ce, type = "boot", horizon = horizon)
head(ce$boot$inf)
which(dates == horizon)
which(dates %in% horizon)
which(dates == int.date)
461-452
ce$boot$inf[8:10,]
stat3[1:9]
stat3[1:10]
stat1[1:10]
pnorm(stat3/sd3)[9:10]
y <- 0.5*seq(0.5, 250, by = 0.5) + rnorm(500, sd = 6)
dates <- seq.Date(from = as.Date("2014-01-05"), by = "days", length.out = 500)
# Adding a fictional intervention
int.date <- as.Date("2015-04-01")
horizon <- c(as.Date("2015-04-10"), as.Date("2015-04-20"))
y.new <- y ; y.new[dates >= int.date] <- y.new[dates >= int.date]*1.25
# Plot
oldpar <- par(no.readonly = TRUE)
plot(y = y.new, x = dates, type = "l", col = "cadetblue", xlim = c(as.Date("2014-10-01"), tail(dates, 1)))
lines(y = y, x = dates, col = "orange")
# Causal effect estimation
start<-as.numeric(strftime(as.Date(dates[1], "%Y-%m-%d"), "%u"))
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "bic", dates = dates, int.date = int.date, nboot = 10000)
summay(ce, type = "boot", horizon = horizon)
summary(ce, type = "boot", horizon = horizon)
316/37
pnorm(316/37)
1-pnorm(316/37)
summary(ce, type = "norm", horizon = horizon)
pnorm(317/7.44)
1-pnorm(345/38)
345/38
library(CausalArima)
y <- 0.5*seq(0.5, 250, by = 0.5) + rnorm(500, sd = 6)
dates <- seq.Date(from = as.Date("2014-01-05"), by = "days", length.out = 500)
# Adding a fictional intervention
int.date <- as.Date("2015-04-01")
horizon <- c(as.Date("2015-04-10"), as.Date("2015-04-20"))
y.new <- y ; y.new[dates >= int.date] <- y.new[dates >= int.date]*1.25
# Plot
oldpar <- par(no.readonly = TRUE)
plot(y = y.new, x = dates, type = "l", col = "cadetblue", xlim = c(as.Date("2014-10-01"), tail(dates, 1)))
lines(y = y, x = dates, col = "orange")
# Causal effect estimation
start<-as.numeric(strftime(as.Date(dates[1], "%Y-%m-%d"), "%u"))
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "bic", dates = dates, int.date = int.date, nboot = 10000)
summary(ce, type = "boot", horizon = horizon)
quantile(dist2, 0.05)
quantile(dist2, 0.95)
quantile(dist2, 0.025)
quantile(dist2, 0.975)
length(sum.tau)
tau  <- causal.effect.0[!is.na(causal.effect.0)]
sum.tau <- cumsum(tau)
avg.tau <- cumsum(tau) / seq(1, length(tau), 1)
length(tau)
mean(tau > stat1)
mean(tau < stat1)
mean(tau[1] < stat1[1,])
dim(stat1)
mean(tau[1] < dist1[1,])
head(dist1)
head(dist1[1,])
tau[1]
mean(tau[1]>dist[1,])
mean(dist[1,]>tau[1])
mean(dist1[1,]< -tau[1]|dist1[1,]>tau[1])
mean(dist1[1,]>tau[1])
mean(dist2[1,]>tau[1])
mean(dist3[2,]>avg.tau[2])
i <- 1
stat <- tau[i]
boot <- dist1[i, ]
pv1.l[i] <- mean(boot < stat)
mean(boot < stat)
mean( boot < -abs(stat) | boot > abs(stat) )
mean(stat < boot)
mean(dist1 >0)
prova <- apply(dist1, 1, FUN = function(x)(mean(x > 0)))
prova <- apply(dist1, 1, FUN = function(x)(mean(x < 0)))
# install.packages("bayestestR")
library(bayestestR)
x<-rnorm(1000, 0.5)
null_h<-0
install.packages("bayestestR")
# install.packages("bayestestR")
library(bayestestR)
x<-rnorm(1000, 0.5)
null_h<-0
# pacchetto
p_dir<-p_direction(x=x, null =null_h)
p_value_two_sided_pacchetto<-pd_to_p(p_dir, direction = "two-sided")
# manuale
pd<-max(mean(x>null_h), mean(x<null_h) )
p_value_two_sided<-2*(1-pd)
# confronto
p_value_two_sided_pacchetto
p_value_two_sided
