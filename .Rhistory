f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
Q
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
# Using 'mapply' to vectorize over the lists
impact_store <- mapply(FUN = CausalArima, y = yy_store, xreg = xregg_store, order = order_store, seasonal = seasonal_store,
MoreArgs = list(dates = dates, int.date = int.date, auto = FALSE, nboot = 10000,
arima.args = list(include.mean = FALSE)), SIMPLIFY = FALSE)
summary(impact_store[[1]], horizon = as.Date(horizon))
horizon<-c("2018-11-04","2019-01-04","2019-04-30")
summary(impact_store[[1]], horizon = as.Date(horizon))
library(CausalArima)
data(sales)
y <- sales[, "Sales"]
dates <- as.Date(sales[, "Dates"])
int.date <- as.Date("2018-10-04")
xreg <- sales[, 3:12]
View(sales)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
det(xreg%*%t(xreg))
prova <- as.matrix(xreg) %*% t(as.matrix(xreg))
det(prova)
xreg <- sales[, 4:12]
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100, auto.args = list(ic = "bic", d = 0, D = 0))
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100, auto.args = list(d = 0, D = 0))
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
source("~/GitHub/CausalArima/R/CausalARIMA.R")
library(CausalArima)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), nboot = 100)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
dim(x2)
View(x2)
fit$coef
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
x2
xreg
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
head(v.tau)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), xreg = sales[,4])
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), xreg = sales[,4])
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), xreg = sales[,4])
dim(xreg1)
length(xreg1)
xreg <- as.matrix(xreg1)
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), xreg = sales[,4])
xreg1 <- as.matrix(xreg1)
prova <- apply(xreg1, 2, function(x)(x[!is.na(causal.effect.0)]))
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
source("~/GitHub/CausalArima/R/CausalARIMA.R")
## Example 2 (daily data, with predictors)
# Loading data and setting dates
data(sales)
y <- sales[, "Sales"]
dates <- as.Date(sales[, "Dates"])
int.date <- as.Date("2018-10-04")
xreg <- sales[, "Price"]
# Plot
oldpar <- par(no.readonly = TRUE)
par(mfrow = c(1,2))
plot(y = y, x = dates, type = "l", main = "Time series of daily sales")
abline(v = int.date, col = "red"); Acf(y, main = "Acf sales")
par(oldpar)
# Causal effect estimation
# The autocorrelation function indicates a weekly sesonal pattern
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
library(CausalArima)
## Example 2 (daily data, with predictors)
# Loading data and setting dates
data(sales)
y <- sales[, "Sales"]
dates <- as.Date(sales[, "Dates"])
int.date <- as.Date("2018-10-04")
xreg <- sales[, "Price"]
# Plot
oldpar <- par(no.readonly = TRUE)
par(mfrow = c(1,2))
plot(y = y, x = dates, type = "l", main = "Time series of daily sales")
abline(v = int.date, col = "red"); Acf(y, main = "Acf sales")
par(oldpar)
# Causal effect estimation
# The autocorrelation function indicates a weekly sesonal pattern
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
library(CausalArima)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
model$coef
xreg <- sales[,4:12]
dim(sales)
colnames(sales)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
model$coef
names(model$coef)
length(c)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
View(xreg1)
model$coef
View(model$xreg)
View(x1)
View(x2)
model
model.l
class(acvf)
head(acvf)
head(acf)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
ce$model$coef
source("~/GitHub/CausalArima/R/CausalARIMA.R")
library(CausalArima)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), nboot = 100)
xreg <- log(sales[, "Price"])
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), nboot = 100)
View(x1)
View(x2)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 1, D = 0), nboot = 100)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0, allowmean = F), nboot = 100)
View(x1)
View(x2)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0, allowmean = F), nboot = 1000)
View(boot1)
xreg <- cbdin(log(sales[,"Price"]),sales[,5:12])
xreg <- cbind(log(sales[,"Price"]),sales[,5:12])
head(y)
ce <- CausalArima(y = ts(log(y), frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), nboot = 1000)
View(boot1)
View(boot3)
length(tau)
tau[1]
pv1.l
head(boot)
head(boot < stat)
View(ce$norm$inf)
View(ce$boot$inf)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(log(y), frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), nboot = 1000)
v.delta[1]
plot(v.tau, type = "l")
plot(v.delta, type = "l")
plot(v.avg, type = "l")
plot(sqrt(v.tau), type = "l")
plot(sqrt(v.delta), type = "l")
plot(sqrt(v.avg), type = "l")
plot(sqrt(v.delta/seq(1,k,1)^2), type = "l")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
summary(ce, type = "boot")
summary(ce, type = "boot", horizon = horizon)
summary(ce, type = "boot", horizon = c(as.Date("2018-11-01", "2019-01-01")))
int.date
summary(ce, type = "boot", horizon = c(as.Date("2019-01-01")))
print(ce, type = "boot", horizon = c(as.Date("2019-01-01")))
print(ce, type = "boot")
horizon<- as.Date(c("2018-11-04","2019-01-04","2019-04-30"))
print(ce, type = "boot")
print(ce, type = "boot", horizon = horizon)
summary(ce, type = "boot", horizon = horizon)
impact(ce, format = "html", style = kable_classic)
impact(ce)
source("~/GitHub/CausalArima/R/table_arima.R")
source("~/GitHub/CausalArima/R/plot_arima.R")
install.packages("formatR")
library(formatR)
sessionInfo()
file.path(package = "CausalArima")
file.path(system.file(package = "CausalArima"))
## Example 2 (daily data, with predictors, log-linear model)
# Loading data and setting dates
data(sales)
y <- log(sales[, "Sales"])
dates <- as.Date(sales[, "Dates"])
int.date <- as.Date("2018-10-04")
horizon<- as.Date(c("2018-11-04","2019-01-04"))
xreg <- sales[, 4:12]
# Causal effect estimation
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
library(CausalArima)
## Example 2 (daily data, with predictors, log-linear model)
# Loading data and setting dates
data(sales)
y <- log(sales[, "Sales"])
dates <- as.Date(sales[, "Dates"])
int.date <- as.Date("2018-10-04")
horizon<- as.Date(c("2018-11-04","2019-01-04"))
xreg <- sales[, 4:12]
# Causal effect estimation
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100, auto.args = list(d = 0, D = 0))
plot(ce, type = "forecast", horizon = horizon)
plot(ce, type = "impact", horizon = horizon)
g <- plot(ce, type = "impact", horizon = horizon)
g$cumulative_plot
plot(ce, type = c("impact", "forecast"), horizon = horizon)
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$data
plot(ce, type = c("impact", "forecast"), horizon = horizon)
source("~/GitHub/CausalArima/R/plot_arima.R")
plot(ce, type = "impact", horizon = horizon)
g <- plot(ce, type = "impact", horizon = horizon)
g$impact
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
library(CausalArima)
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g <- plot(ce, type = c("impact", "residuals"), horizon = horizon)
g$residuals
g$residuals
g <- plot(ce, type = "forecast", horizon = horizon)
detach("package:CausalArima", unload = TRUE)
detach("package:forecast", unload = TRUE)
detach("package:formatR", unload = TRUE)
detach("package:ggplot2", unload = TRUE)
detach("package:gridExtra", unload = TRUE)
detach("package:kableExtra", unload = TRUE)
library(CausalArima)
g <- plot(ce, type = "forecast", horizon = horizon)
library(tidybayes)
g <- plot(ce, type = "forecast", horizon = horizon)
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$forecast
g$impact$point_effect
library(formatR)
tidy_source(source = "C:/Users/fiamm/Documents/GitHub/CausalArima/R/plot_arima.R", wrap = FALSE)
tidy_source(source = "C:/Users/fiamm/Documents/GitHub/CausalArima/R/CausalArima.R", wrap = FALSE)
tidy_source(source = "C:/Users/fiamm/Documents/GitHub/CausalArima/R/plot_arima.R", wrap = FALSE)
source("~/GitHub/CausalArima/R/plot_arima.R")
tidy_source(source = "C:/Users/fiamm/Documents/GitHub/CausalArima/R/plot_arima.R", wrap = FALSE)
source("~/GitHub/CausalArima/R/plot_arima.R")
source("~/GitHub/CausalArima/R/plot_arima.R")
source("~/GitHub/CausalArima/R/plot_arima.R")
tidy_source(source = "C:/Users/fiamm/Documents/GitHub/CausalArima/R/plot_arima.R", wrap = FALSE)
tidy_source(source = "C:/Users/fiamm/Documents/GitHub/CausalArima/R/plot_arima.R", wrap = FALSE, args.newline = TRUE)
tidy_source(source = "C:/Users/fiamm/Documents/GitHub/CausalArima/R/plot_arima.R", wrap = FALSE, args.newline = TRUE, width.cutoff = 20)
tidy_source(source = "C:/Users/fiamm/Documents/GitHub/CausalArima/R/plot_arima.R", wrap = FALSE, args.newline = TRUE, width.cutoff = 100)
tidy_source(source = "C:/Users/fiamm/Documents/GitHub/CausalArima/R/plot_arima.R", wrap = FALSE, width.cutoff = 100)
source("~/GitHub/CausalArima/R/plot_arima.R")
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$forecast
g$impact
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$impact
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$impact
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$impact
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$impact
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$impact
source("~/GitHub/CausalArima/R/plot_arima.R")
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$impact
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$impact
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$impact$point_effect
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$impact$point_effect
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$impact$point_effect
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
ggplot(data = dat, aes(x = x)) + coord_cartesian(ylim = ylim)
+
labs(title = "Point effect", y = "", x = ""
)
ggplot(data = dat, aes(x = x)) + coord_cartesian(ylim = ylim) +
labs(title = "Point effect", y = "", x = "")
ggplot(data = dat, aes(x = x)) + coord_cartesian(ylim = ylim) +
labs(title = "Point effect", y = "", x = "") +
theme_bw(base_size = 15)
data = dat, aes(x = x)) + coord_cartesian(ylim = ylim) +
labs(title = "Point effect", y = "", x = "") +
theme_bw(base_size = 15) +
geom_ribbon(aes(x = x, ymax = y.upper, ymin = y.lower), fill = color_intervals)
ggplot(data = dat, aes(x = x)) + coord_cartesian(ylim = ylim) +
labs(title = "Point effect", y = "", x = "") +
theme_bw(base_size = 15) +
geom_ribbon(aes(x = x, ymax = y.upper, ymin = y.lower), fill = color_intervals) +
geom_hline(yintercept = 0, colour = "darkgrey", size = lines_size, linetype = "solid")
g
g + geom_vline(x = as.Date(horizon))
g + geom_vline(aes(x = as.Date(horizon)))
g + geom_vline(xintercept = as.Date(horizon))
g + geom_vline(aes(xintercept = as.Date(horizon), linetype = "Time horizons"))
g + geom_vline(aes(xintercept = as.Date(horizon)[1], linetype = "Time horizons"))
g + geom_vline(xintercept = as.Date(horizon), linetype = "Time horizons")
g + geom_vline(xintercept = as.Date(horizon), linetype = "dotdash")
g + geom_vline(xintercept = as.Date(horizon), linetype = "dotdash") + scale_linetype_manual(values = "longdash")
g + geom_vline(xintercept = as.Date(horizon), linetype = "dotdash") + labs(linetype = "Prova")
g + sapply(as.Date(horizon), function(xint) geom_vline(aes(xintercept = xint)))
g + sapply(as.Date(horizon), function(xint) geom_vline(aes(xintercept = xint, linetype = "Prova")))
g + sapply(as.Date(horizon), function(xint) geom_vline(aes(xintercept = xint, linetype = "Prova"))) + scale_linetype_manual(linetype = "dotdash")
g + sapply(as.Date(horizon), function(xint) geom_vline(aes(xintercept = xint, linetype = "Prova"))) + scale_linetype_manual(values = "dotdash")
g + sapply(as.Date(horizon), function(xint) geom_vline(aes(xintercept = xint, linetype = "Prova"), linetype = "dotdash"))
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$forecast
g$impact$point_effect
g$impact$cumulative_effect
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$impact$cumulative_effect
g$impact$point_effect
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$impact$point_effect
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$impact$point_effect
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g
g + sapply(as.Date(horizon), function(xint) geom_vline(aes(xintercept = xint, linetype = paste(xint)))) +
scale_linetype_manual(values = "dotdash") + labs(linetype = "Time horizons")
paste(xint)
g + sapply(as.Date(horizon), function(xint) geom_vline(aes(xintercept = xint, linetype = "Time horizon"), linetype = "dotdash"))
g + sapply(as.Date(horizon), function(xint) geom_vline(aes(xintercept = xint, linetype = "Time horizons"))) +
scale_linetype_manual(values = "dotdash") + labs(linetype = "")
g + sapply(as.Date(horizon), function(xint) geom_vline(aes(xintercept = xint, linetype = "Time horizons"))) +
scale_linetype_manual(values = "dotdash") + labs(linetype = " ")
g + sapply(as.Date(horizon), function(xint) geom_vline(aes(xintercept = xint, linetype = "Time horizons"))) +
scale_linetype_manual(values = "dotdash") + labs(linetype = " Prova ")
g + sapply(as.Date(horizon), function(xint) geom_vline(aes(xintercept = xint, linetype = "Prova"))) +
scale_linetype_manual(values = "dotdash") + labs(linetype = "Time horizons")
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g
g + sapply(as.Date(horizon), function(xint) geom_vline(aes(xintercept = xint, linetype = "Time horizon"))) +
scale_linetype_manual(values = "dotdash") + labs(linetype = " ")
source("~/GitHub/CausalArima/R/plot_arima.R")
source("~/GitHub/CausalArima/R/plot_arima.R")
g <- plot(ce, type = c("impact", "forecast"), horizon = horizon)
g$impact
