library(CausalArima)
library(CausalArima)
#############################################################################
#############################################################################
###                                                                       ###
###                                                                       ###
### Causal effect of lockdown on pollution levels                         ###
###                                                                       ###
### Author : Fiammetta Menchetti                                          ###
###                                                                       ###
### Content: Causal effect estimation                                     ###
###          (prova)                                                      ###
###                                                                       ###
#############################################################################
#############################################################################
rm(list=ls())
setwd("C:/Users/fiamm/Documents/Assegno di ricerca 2021")
#############################################################################
# Loading required libraries & functions
#############################################################################
source('C:/Users/fiamm/Documents/Dottorato/Tesi/mixed-functions.R')
library(ggplot2)
library(gridExtra)
library(forecast)
library(vars)
library(CausalArima)
#############################################################################
# Loading data & setting intervention date
#############################################################################
data <- read.table("data_set.csv", header = T, sep = ",")
data[, "Dates"] <- as.Date(data[, "Dates"])
int.date <- as.Date("2020-03-09")
#############################################################################
# Causal effect
#############################################################################
## Response variables
y <- data[,2:5]
y_log <- y
ind <- which(y$so2 == 0)
y[ind, "so2"] <- 1
y_log[, -1] <- apply(y[, -1], 2, log)
## Prove
# Covariates
x2 <- data.frame(Umidita = data[, "Umidita"], Vento.media = data[, "Vento.media.km.h"], Temp.media = data[, "Temp.media"])
# Levels
prova <- CausalVAR(y = y, dates = data[, "Dates"], int.date = int.date, VAR.args = list(season = 7, lag.max = 5, ic = "AIC"))
prova1 <- CausalVAR(y = y, dates = data[, "Dates"], int.date = int.date, horizon = as.Date("2020-06-01"),
exogen = x2, VAR.args = list(season = 7, lag.max = 5, ic = "AIC"))
# Log scale
prova2 <- CausalVAR(y = y_log, dates = data[, "Dates"], int.date = int.date, horizon = as.Date("2020-06-01"),
VAR.args = list(season = 7, lag.max = 5, ic = "AIC"))
prova3 <- CausalVAR(y = y_log, dates = data[, "Dates"], int.date = int.date, horizon = as.Date("2020-06-01"),
exogen = x2, VAR.args = list(season = 7, lag.max = 5, ic = "AIC"))
source('~/GitHub/CausalArima/R/plot_var.R')
.impactVAR(prova, int.date)
.forecastVAR(prova3, int.date)
.impactVAR(prova3, int.date)
source('~/GitHub/CausalArima/R/plot_var.R')
.impactVAR(prova3, int.date)
source('~/GitHub/CausalArima/R/plot_var.R')
.impactVAR(prova3, int.date)
source('~/GitHub/CausalArima/R/plot_var.R')
.impactVAR(prova3, int.date)
source('~/GitHub/CausalArima/R/plot_var.R')
.impactVAR(prova3, int.date)
source('~/GitHub/CausalArima/R/plot_var.R')
.impactVAR(prova3, int.date)
source('~/GitHub/CausalArima/R/plot_var.R')
source('~/GitHub/CausalArima/R/plot_var.R')
.impactVAR(prova3, int.date, ncol = 3)
plot(prova3, int.date = int.date, type = "forecast")
plot(prova3, int.date = int.date, type = "impact")
plot(prova3, int.date = int.date, type = "residuals")
plot(prova3, int.date = int.date, type = "impact", ncol = 3)
source('~/GitHub/CausalArima/R/plot_var.R')
plot(prova3, int.date = int.date, type = "impact", ncol = 3)
plot(prova3, int.date = int.date, type = "impact", ncol = 4)
source('~/GitHub/CausalArima/R/plot_var.R')
plot(prova3, int.date = int.date, type = "impact", ncol = 4)
source('~/GitHub/CausalArima/R/plot_var.R')
plot(prova3, int.date = int.date, type = "impact", ncol = 3)
library(CausalArima)
library(CausalArima)
y <- 0.5*seq(0.5, 250, by = 0.5) + rnorm(500, sd = 6)
dates <- seq.Date(from = as.Date("2014-01-05"), by = "days", length.out = 500)
# Adding a fictional intervention
int.date <- as.Date("2015-04-01")
horizon <- c(as.Date("2015-04-10"), as.Date("2015-04-20"))
y.new <- y ; y.new[dates >= int.date] <- y.new[dates >= int.date]*1.25
# Causal effect estimation
start<-as.numeric(strftime(as.Date(dates[1], "%Y-%m-%d"), "%u"))
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "aic", dates = dates, int.date = int.date)
.forecast <- function(cArima, int.date){
dates <- cArima$dates
observed <- cArima$y
start <- which(dates == int.date) - round(0.4 * sum(dates < int.date))
if(!is.list(cArima$effect)){
forecasted <- c(cArima$model$fitted, cArima$forecast.mean)
end <- length(forecasted)
x <- dates[start:(end - 1)]
dat <- data.frame(x = x, forecasted.cut = forecasted[start:(end - 1)], observed.cut = observed[start:(end - 1)])
ylim <- c(min(dat[, -1]), max(dat[, -1]))
main <- "Forecasted series"
ggplot(data = dat, aes(x = x, colour = "Legend")) +  coord_cartesian(ylim = ylim) + labs(title = main, y = "", x = "") +
geom_line(aes(y = forecasted.cut, color = "Forecast"))  +
geom_line(aes(y = observed.cut, color = "Observed")) +
scale_colour_manual(values = c("deepskyblue", "gray40")) +
geom_vline(aes(xintercept = int.date, linetype = paste(int.date))) +
scale_linetype_manual(values = "dashed") +
labs(color="Time series", linetype="Intervention date") +
guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
} else {
for(i in 1:length(cArima$effect)){
forecasted <- c(cArima$model$fitted, cArima$forecast.mean[[i]])
end <- length(forecasted)
x <- dates[start:(end - 1)]
forecasted.cut <- forecasted[start:(end - 1)]
observed.cut <- observed[start:(end - 1)]
ylim <- c(min(observed.cut, forecasted.cut), max(observed.cut, forecasted.cut))
main <- paste("Forecasted series, horizon ", i, sep = "")
plot(y = observed.cut, x = x, type = "l", ylim = ylim, ylab = "", xlab = "", main = main)
lines(forecasted.cut, col = "blue", x = x)
abline(v = int.date, col = "red")
}
}
}
.forecast(ce, int.date = int.date)
library(ggplot2)
.forecast(ce, int.date = int.date)
.forecast <- function(cArima, int.date){
dates <- cArima$dates
observed <- cArima$y
start <- which(dates == int.date) - round(0.4 * sum(dates < int.date))
if(!is.list(cArima$effect)){
forecasted <- c(cArima$model$fitted, cArima$forecast.mean)
end <- length(forecasted)
x <- dates[start:(end - 1)]
dat <- data.frame(x = x, forecasted.cut = forecasted[start:(end - 1)], observed.cut = observed[start:(end - 1)])
ylim <- c(min(dat[, -1]), max(dat[, -1]))
main <- "Forecasted series"
ggplot(data = dat, aes(x = x, colour = "Legend")) +  coord_cartesian(ylim = ylim) + labs(title = main, y = "", x = "") +
geom_line(aes(y = forecasted.cut, color = "Forecast"))  +
geom_line(aes(y = observed.cut, color = "Observed")) +
scale_colour_manual(values = c("deepskyblue", "gray40")) +
geom_vline(aes(xintercept = int.date, linetype = paste(int.date))) +
scale_linetype_manual(values = "dashed") +
labs(color="Time series", linetype="Intervention date") +
guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
} else {
for(i in 1:length(cArima$effect)){
forecasted <- c(cArima$model$fitted, cArima$forecast.mean[[i]])
end <- length(forecasted)
x <- dates[start:(end - 1)]
dat <- data.frame(x = x, forecasted.cut = forecasted[start:(end - 1)], observed.cut = observed[start:(end - 1)])
ylim <- c(min(dat[, -1]), max(dat[, -1]))
main <- "Forecasted series"
sub <- paste("Time horizon ", i, sep = "")
ggplot(data = dat, aes(x = x, colour = "Legend")) +  coord_cartesian(ylim = ylim) + labs(title = main, subtitle = sub, y = "", x = "") +
geom_line(aes(y = forecasted.cut, color = "Forecast"))  +
geom_line(aes(y = observed.cut, color = "Observed")) +
scale_colour_manual(values = c("deepskyblue", "gray40")) +
geom_vline(aes(xintercept = int.date, linetype = paste(int.date))) +
scale_linetype_manual(values = "dashed") +
labs(color="Time series", linetype="Intervention date") +
guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
}
}
}
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "aic", dates = dates, int.date = int.date, horizon = horizon)
.forecast(ce, int.date = int.date)
.forecast(ce, int.date = int.date)
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "aic", dates = dates, int.date = int.date)
.forecast(ce, int.date = int.date)
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "aic", dates = dates, int.date = int.date, horizon = as.Date(horizon))
.forecast(ce, int.date = int.date)
.forecast <- function(cArima, int.date){
dates <- cArima$dates
observed <- cArima$y
start <- which(dates == int.date) - round(0.4 * sum(dates < int.date))
if(!is.list(cArima$effect)){
forecasted <- c(cArima$model$fitted, cArima$forecast.mean)
end <- length(forecasted)
x <- dates[start:(end - 1)]
dat <- data.frame(x = x, forecasted.cut = forecasted[start:(end - 1)], observed.cut = observed[start:(end - 1)])
ylim <- c(min(dat[, -1]), max(dat[, -1]))
main <- "Forecasted series"
ggplot(data = dat, aes(x = x, colour = "Legend")) +  coord_cartesian(ylim = ylim) + labs(title = main, y = "", x = "") +
geom_line(aes(y = forecasted.cut, color = "Forecast"))  +
geom_line(aes(y = observed.cut, color = "Observed")) +
scale_colour_manual(values = c("deepskyblue", "gray40")) +
geom_vline(aes(xintercept = int.date, linetype = paste(int.date))) +
scale_linetype_manual(values = "dashed") +
labs(color="Time series", linetype="Intervention date") +
guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
} else {
for(i in 1:length(cArima$effect)){
forecasted <- c(cArima$model$fitted, cArima$forecast.mean[[i]])
end <- length(forecasted)
x <- dates[start:(end - 1)]
dat <- data.frame(x = x, forecasted.cut = forecasted[start:(end - 1)], observed.cut = observed[start:(end - 1)])
ylim <- c(min(dat[, -1]), max(dat[, -1]))
main <- "Forecasted series"
sub <- paste("Time horizon ", i, sep = "")
g[[j]] <-ggplot(data = dat, aes(x = x, colour = "Legend")) +  coord_cartesian(ylim = ylim) + labs(title = main, subtitle = sub, y = "", x = "") +
geom_line(aes(y = forecasted.cut, color = "Forecast"))  +
geom_line(aes(y = observed.cut, color = "Observed")) +
scale_colour_manual(values = c("deepskyblue", "gray40")) +
geom_vline(aes(xintercept = int.date, linetype = paste(int.date))) +
scale_linetype_manual(values = "dashed") +
labs(color="Time series", linetype="Intervention date") +
guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
}
do.call(grid.arrange, c(g, ...))
}
}
.forecast(ce, int.date = int.date)
.forecast <- function(cArima, int.date){
dates <- cArima$dates
observed <- cArima$y
start <- which(dates == int.date) - round(0.4 * sum(dates < int.date))
if(!is.list(cArima$effect)){
forecasted <- c(cArima$model$fitted, cArima$forecast.mean)
end <- length(forecasted)
x <- dates[start:(end - 1)]
dat <- data.frame(x = x, forecasted.cut = forecasted[start:(end - 1)], observed.cut = observed[start:(end - 1)])
ylim <- c(min(dat[, -1]), max(dat[, -1]))
main <- "Forecasted series"
ggplot(data = dat, aes(x = x, colour = "Legend")) +  coord_cartesian(ylim = ylim) + labs(title = main, y = "", x = "") +
geom_line(aes(y = forecasted.cut, color = "Forecast"))  +
geom_line(aes(y = observed.cut, color = "Observed")) +
scale_colour_manual(values = c("deepskyblue", "gray40")) +
geom_vline(aes(xintercept = int.date, linetype = paste(int.date))) +
scale_linetype_manual(values = "dashed") +
labs(color="Time series", linetype="Intervention date") +
guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
} else {
for(i in 1:length(cArima$effect)){
forecasted <- c(cArima$model$fitted, cArima$forecast.mean[[i]])
end <- length(forecasted)
x <- dates[start:(end - 1)]
dat <- data.frame(x = x, forecasted.cut = forecasted[start:(end - 1)], observed.cut = observed[start:(end - 1)])
ylim <- c(min(dat[, -1]), max(dat[, -1]))
main <- "Forecasted series"
sub <- paste("Time horizon ", i, sep = "")
g[[i]] <-ggplot(data = dat, aes(x = x, colour = "Legend")) +  coord_cartesian(ylim = ylim) + labs(title = main, subtitle = sub, y = "", x = "") +
geom_line(aes(y = forecasted.cut, color = "Forecast"))  +
geom_line(aes(y = observed.cut, color = "Observed")) +
scale_colour_manual(values = c("deepskyblue", "gray40")) +
geom_vline(aes(xintercept = int.date, linetype = paste(int.date))) +
scale_linetype_manual(values = "dashed") +
labs(color="Time series", linetype="Intervention date") +
guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
}
do.call(grid.arrange, c(g, ...))
}
}
.forecast(ce, int.date = int.date)
.forecast <- function(cArima, int.date){
dates <- cArima$dates
observed <- cArima$y
start <- which(dates == int.date) - round(0.4 * sum(dates < int.date))
if(!is.list(cArima$effect)){
forecasted <- c(cArima$model$fitted, cArima$forecast.mean)
end <- length(forecasted)
x <- dates[start:(end - 1)]
dat <- data.frame(x = x, forecasted.cut = forecasted[start:(end - 1)], observed.cut = observed[start:(end - 1)])
ylim <- c(min(dat[, -1]), max(dat[, -1]))
main <- "Forecasted series"
ggplot(data = dat, aes(x = x, colour = "Legend")) +  coord_cartesian(ylim = ylim) + labs(title = main, y = "", x = "") +
geom_line(aes(y = forecasted.cut, color = "Forecast"))  +
geom_line(aes(y = observed.cut, color = "Observed")) +
scale_colour_manual(values = c("deepskyblue", "gray40")) +
geom_vline(aes(xintercept = int.date, linetype = paste(int.date))) +
scale_linetype_manual(values = "dashed") +
labs(color="Time series", linetype="Intervention date") +
guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
} else {
g <- list()
for(i in 1:length(cArima$effect)){
forecasted <- c(cArima$model$fitted, cArima$forecast.mean[[i]])
end <- length(forecasted)
x <- dates[start:(end - 1)]
dat <- data.frame(x = x, forecasted.cut = forecasted[start:(end - 1)], observed.cut = observed[start:(end - 1)])
ylim <- c(min(dat[, -1]), max(dat[, -1]))
main <- "Forecasted series"
sub <- paste("Time horizon ", i, sep = "")
g[[i]] <-ggplot(data = dat, aes(x = x, colour = "Legend")) +  coord_cartesian(ylim = ylim) + labs(title = main, subtitle = sub, y = "", x = "") +
geom_line(aes(y = forecasted.cut, color = "Forecast"))  +
geom_line(aes(y = observed.cut, color = "Observed")) +
scale_colour_manual(values = c("deepskyblue", "gray40")) +
geom_vline(aes(xintercept = int.date, linetype = paste(int.date))) +
scale_linetype_manual(values = "dashed") +
labs(color="Time series", linetype="Intervention date") +
guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
}
do.call(grid.arrange, c(g, ...))
}
}
.forecast(ce, int.date = int.date)
cArima <- ce
dates <- cArima$dates
observed <- cArima$y
start <- which(dates == int.date) - round(0.4 * sum(dates < int.date))
!is.list(cArima$effect)
g <- list()
for(i in 1:length(cArima$effect)){
forecasted <- c(cArima$model$fitted, cArima$forecast.mean[[i]])
end <- length(forecasted)
x <- dates[start:(end - 1)]
dat <- data.frame(x = x, forecasted.cut = forecasted[start:(end - 1)], observed.cut = observed[start:(end - 1)])
ylim <- c(min(dat[, -1]), max(dat[, -1]))
main <- "Forecasted series"
sub <- paste("Time horizon ", i, sep = "")
g[[i]] <-ggplot(data = dat, aes(x = x, colour = "Legend")) +  coord_cartesian(ylim = ylim) + labs(title = main, subtitle = sub, y = "", x = "") +
geom_line(aes(y = forecasted.cut, color = "Forecast"))  +
geom_line(aes(y = observed.cut, color = "Observed")) +
scale_colour_manual(values = c("deepskyblue", "gray40")) +
geom_vline(aes(xintercept = int.date, linetype = paste(int.date))) +
scale_linetype_manual(values = "dashed") +
labs(color="Time series", linetype="Intervention date") +
guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
}
g[[1]]
g[[2]]
do.call(grid.arrange, c(g, ...))
do.call(grid.arrange, c(g, ncol=2))
library(gridExtra)
do.call(grid.arrange, c(g, ncol=2))
.impact <- function(cArima, int.date){
dates <- cArima$dates
if(!is.list(cArima$effect)){
x <- dates[dates >= int.date]
main <- "Point effect"
dat <- data.frame(x = x, y = cArima$effect.mean, y.upper = cArima$effect.upper, y.lower = cArima$effect.lower)
ylim <- c(min(dat[, "y.lower"]), max(dat[, "y.upper"]))
ggplot(data = dat, aes(x = x)) +  coord_cartesian(ylim = ylim) + labs(title = main, y = "", x = "") +
geom_line(aes(y = y), color = "navy") +
geom_ribbon(aes(x = x, ymax = y.upper, ymin = y.lower), fill="steelblue", alpha=.5)
} else {
g <- list()
for(i in 1:length(cArima$effect)){
start <- which(dates == int.date)
end <- start + length(cArima$forecast.mean[[i]])
x <- dates[start:(end -1)]
ylim <- c(min(dat[, "y.lower"]), max(dat[, "y.upper"]))
main <- paste("Point effect")
sub <- paste("Time horizon ", i, sep = "")
g[[j]] <- ggplot(data = dat, aes(x = x)) +  coord_cartesian(ylim = ylim) + labs(title = main, subtitle = sub, y = "", x = "") +
geom_line(aes(y = y), color = "navy") +
geom_ribbon(aes(x = x, ymax = y.upper, ymin = y.lower), fill="steelblue", alpha=.5)
}
do.call(grid.arrange, c(g, ...))
}
}
.impact(ce, int.date = int.date, ncol = 2)
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "aic", dates = dates, int.date = int.date)
.impact(ce, int.date = int.date)
.impact <- function(cArima, int.date, ...){
dates <- cArima$dates
if(!is.list(cArima$effect)){
x <- dates[dates >= int.date]
main <- "Point effect"
dat <- data.frame(x = x, y = cArima$effect.mean, y.upper = cArima$effect.upper, y.lower = cArima$effect.lower)
ylim <- c(min(dat[, "y.lower"]), max(dat[, "y.upper"]))
ggplot(data = dat, aes(x = x)) +  coord_cartesian(ylim = ylim) + labs(title = main, y = "", x = "") +
geom_line(aes(y = y), color = "navy") +
geom_ribbon(aes(x = x, ymax = y.upper, ymin = y.lower), fill="steelblue", alpha=.5)
} else {
g <- list()
for(i in 1:length(cArima$effect)){
start <- which(dates == int.date)
end <- start + length(cArima$forecast.mean[[i]])
x <- dates[start:(end -1)]
ylim <- c(min(dat[, "y.lower"]), max(dat[, "y.upper"]))
main <- paste("Point effect")
sub <- paste("Time horizon ", i, sep = "")
g[[j]] <- ggplot(data = dat, aes(x = x)) +  coord_cartesian(ylim = ylim) + labs(title = main, subtitle = sub, y = "", x = "") +
geom_line(aes(y = y), color = "navy") +
geom_ribbon(aes(x = x, ymax = y.upper, ymin = y.lower), fill="steelblue", alpha=.5)
}
do.call(grid.arrange, c(g, ...))
}
}
ce <- CausalArima(y = ts(y.new, start = start, frequency = 1), auto = TRUE, ic = "aic", dates = dates, int.date = int.date, horizon = horizon)
ce$effect
.impact(ce, int.date = int.date, ncol = 2)
.impact <- function(cArima, int.date, ...){
dates <- cArima$dates
if(!is.list(cArima$effect)){
x <- dates[dates >= int.date]
main <- "Point effect"
dat <- data.frame(x = x, y = cArima$effect.mean, y.upper = cArima$effect.upper, y.lower = cArima$effect.lower)
ylim <- c(min(dat[, "y.lower"]), max(dat[, "y.upper"]))
ggplot(data = dat, aes(x = x)) +  coord_cartesian(ylim = ylim) + labs(title = main, y = "", x = "") +
geom_line(aes(y = y), color = "navy") +
geom_ribbon(aes(x = x, ymax = y.upper, ymin = y.lower), fill="steelblue", alpha=.5)
} else {
g <- list()
for(i in 1:length(cArima$effect)){
start <- which(dates == int.date)
end <- start + length(cArima$forecast.mean[[i]])
x <- dates[start:(end -1)]
dat <- data.frame(x = x, y = cArima$effect.mean[[i]], y.upper = cArima$effect.upper[[i]], y.lower = cArima$effect.lower[[i]])
ylim <- c(min(dat[, "y.lower"]), max(dat[, "y.upper"]))
main <- paste("Point effect")
sub <- paste("Time horizon ", i, sep = "")
g[[j]] <- ggplot(data = dat, aes(x = x)) +  coord_cartesian(ylim = ylim) + labs(title = main, subtitle = sub, y = "", x = "") +
geom_line(aes(y = y), color = "navy") +
geom_ribbon(aes(x = x, ymax = y.upper, ymin = y.lower), fill="steelblue", alpha=.5)
}
do.call(grid.arrange, c(g, ...))
}
}
.impact(ce, int.date = int.date, ncol = 2)
.impact <- function(cArima, int.date, ...){
dates <- cArima$dates
if(!is.list(cArima$effect)){
x <- dates[dates >= int.date]
main <- "Point effect"
dat <- data.frame(x = x, y = cArima$effect.mean, y.upper = cArima$effect.upper, y.lower = cArima$effect.lower)
ylim <- c(min(dat[, "y.lower"]), max(dat[, "y.upper"]))
ggplot(data = dat, aes(x = x)) +  coord_cartesian(ylim = ylim) + labs(title = main, y = "", x = "") +
geom_line(aes(y = y), color = "navy") +
geom_ribbon(aes(x = x, ymax = y.upper, ymin = y.lower), fill="steelblue", alpha=.5)
} else {
g <- list()
for(i in 1:length(cArima$effect)){
start <- which(dates == int.date)
end <- start + length(cArima$forecast.mean[[i]])
x <- dates[start:(end -1)]
dat <- data.frame(x = x, y = cArima$effect.mean[[i]], y.upper = cArima$effect.upper[[i]], y.lower = cArima$effect.lower[[i]])
ylim <- c(min(dat[, "y.lower"]), max(dat[, "y.upper"]))
main <- paste("Point effect")
sub <- paste("Time horizon ", i, sep = "")
g[[i]] <- ggplot(data = dat, aes(x = x)) +  coord_cartesian(ylim = ylim) + labs(title = main, subtitle = sub, y = "", x = "") +
geom_line(aes(y = y), color = "navy") +
geom_ribbon(aes(x = x, ymax = y.upper, ymin = y.lower), fill="steelblue", alpha=.5)
}
do.call(grid.arrange, c(g, ...))
}
}
.impact(ce, int.date = int.date, ncol = 2)
library(CausalArima)
library(CausalArima)
library(CausalArima)
