}
results
}
# --------------------------------------------------------------------------------------
effect_table <- function(list.results, type, stat, direction, horizon = NULL, digits = 2, latex = FALSE){
if(is.null(horizon)){horizon <- tail(list.results[[1]]$dates, 1)}
effect.table <- unlist(lapply(lapply(list.results, FUN = ResultTable, type = type, stat = stat,
direction = direction, horizon = horizon, digits = digits), function(x)(t(x))))
if (type == "norm"){
tab <- matrix(effect.table, nrow = length(list.results)*2, ncol = length(horizon), byrow = TRUE)
} else {
tab <- matrix(effect.table, nrow = length(list.results), ncol = length(horizon), byrow = TRUE)
}
if(latex){
tab1 <- paste("&", apply(tab, 1, function(x){paste(x, collapse = " & ")}), " \\")[1]
for(i in 2:nrow(tab)){
tab1 <- rbind(tab1, paste(apply(tab, 1, function(x){paste(x, collapse = " & ")}), " \\")[i])
}
noquote(tab1)
} else {
colnames(tab) <- paste(horizon)
noquote(tab)
}
}
# ------------------------------------------------------------------------------
ResultTable <- function(cArima, type, stat, direction, horizon = NULL, digits = 2){
# Settings
if(is.null(horizon)){ horizon <- tail(cArima$dates, 1)}
tab <- matrix(NA, nrow = 1, ncol = length(horizon))
colnames(tab) <- paste(horizon)
rownames(tab) <- paste(stat)
star. <- .star(print(cArima, type = type, horizon = as.Date(horizon))[, paste0("pvalue.", stat, ".", direction)])
# Table
tab[1,] <- paste(round(print(cArima, type = type, horizon = as.Date(horizon))[, paste(stat)], digits = digits), "^{", star., "}", sep="" )
tab[1,] <- gsub(tab[1,], pattern = "\\^\\{ \\}", replacement = "")
if(type == "norm"){
tab <- rbind(tab, sd = paste("(",round(print(cArima, type = type, horizon = as.Date(horizon))[, paste("sd.", stat, sep = "")], digits = digits),")", sep = ""))
}
noquote(tab)
}
# ------------------------------------------------------------------------------
.star <- function(pvalue){
star <- rep(NA, times = length(pvalue))
ind  <- abs(pvalue) < 0.001
ind2 <- abs(pvalue) < 0.01 & abs(pvalue) >= 0.001
ind3 <- abs(pvalue) < 0.05 & abs(pvalue) >= 0.01
ind4 <- abs(pvalue) < 0.1 &  abs(pvalue) >= 0.05
star[ind] <- "***" ; star[ind2] <- "**" ; star[ind3]<- "*"
star[ind4] <- "." ; star[!ind & !ind2 & !ind3 & !ind4] <- " "
star
}
# ------------------------------------------------------------------------------
regarima_table <- function(regarima){
beta <- round(regarima[[1]][["beta"]], 2)
sd <- round(regarima[[1]][["sd"]], 2)
pvalue <- regarima[[1]][["pvalue"]]
res <- rbind(paste0(beta, "^{", .star(pvalue), "}"), paste0("(", sd, ")"))
for(i in 2:length(regarima)){
beta <- round(regarima[[i]][["beta"]], 2)
sd <- round(regarima[[i]][["sd"]], 2)
pvalue <- regarima[[i]][["pvalue"]]
res <- rbind(res, rbind(paste0(beta, "^{", .star(pvalue), "}"), paste0("(", sd, ")")))
}
res <- gsub(res, pattern = "\\^\\{ \\}", replacement = "")
return(noquote(res))
}
prova <- CausalARIMA(y = y.new, dates = dates, int.date = int.date, xreg = NULL)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
library(CausalArima)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
library(CausalArima)
data(sales)
y <- sales[, "Sales"]
dates <- as.Date(sales[, "Dates"])
int.date <- as.Date("2018-10-04")
xreg <- sales[, "Price"]
# Plot
oldpar <- par(no.readonly = TRUE)
par(mfrow = c(1,2))
plot(y = y, x = dates, type = "l", main = "Time series of daily sales")
abline(v = int.date, col = "red"); Acf(y, main = "Acf sales")
par(oldpar)
# Causal effect estimation
# The autocorrelation function indicates a weekly sesonal pattern
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
View(sales)
xreg <- sales[,c(3,4,5)]
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = sales[3:12], int.date = int.date,
dates = dates, nboot = 100)
ce <- CausalArima(y = ts(log(y), frequency = 7), xreg = sales[3:12], int.date = int.date,
dates = dates, nboot = 100)
rm(list=ls())
set.seed(5290)
setwd("C:/Users/fiamm/Documents/Dottorato/Tesi/CSARIMA/Latex/EJ/Major revisions")
######################################################################################
### Loading required libraries & functions
######################################################################################
library(tseries)
library(forecast)
library(ggplot2)
#library(gridExtra)
source('C:/Users/fiamm/Documents/Dottorato/Tesi/CSARIMA/Latex/EJ/Major revisions/Functions.R')
sales <- read.table("sales.csv", header = T, sep = ",")
price <- read.table("price.csv", header = T, sep = ",")
dates <- as.Date(read.table("dates.csv", header = T)[,1])
dummies <- read.table("dummies.csv", header = T, sep = ",")
setwd("C:/Users/fiamm/Documents/Dottorato/Tesi/CSARIMA/Latex/EJ/Major revisions/Replication package/Data")
int.date<-as.Date("2018-10-04", format="%Y-%m-%d")
horizon<-c("2018-11-04","2019-01-04","2019-04-30")
######################################################################################
#  Importing data
######################################################################################
sales <- read.table("sales.csv", header = T, sep = ",")
price <- read.table("price.csv", header = T, sep = ",")
dates <- as.Date(read.table("dates.csv", header = T)[,1])
dummies <- read.table("dummies.csv", header = T, sep = ",")
rm(list=ls())
source("~/GitHub/CausalArima/R/CausalARIMA.R")
library(CausalArima)
data(sales)
y <- sales[, "Sales"]
dates <- as.Date(sales[, "Dates"])
int.date <- as.Date("2018-10-04")
xreg <- sales[, "Price"]
dim(sales)
reg <- sales[, 3:12]
xreg <- sales[, 3:12]
rm(reg)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100, auto.args = list(d=0, D=0, allowmean = FALSE))
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100, auto.args = list(d=0, D=0, allowmean = FALSE, allowdrift = FALSE))
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100, auto.args = list(d=0, D=0, allowmean = FALSE, allowdrift = FALSE))
library(CausalArima)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100, auto.args = list(d=0, D=0, allowmean = FALSE, allowdrift = FALSE))
prova <- auto.arima(y = sales$Sales, xreg = xreg, allowmean = F, allowdrift = F)
prova <- auto.arima(y = sales$Sales, xreg = as.matrix(xreg), allowmean = F, allowdrift = F)
prova <- auto.arima(y = ts(sales$Sales, frequency = 7), xreg = as.matrix(xreg), allowmean = F, allowdrift = F)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100, auto.args = list(d=0, D=0, allowmean = FALSE, allowdrift = FALSE))
prova <- auto.arima(y = ts(sales$Sales[dates<int.date], frequency = 7), xreg = as.matrix(xreg)[dates<int.date,], allowmean = F, allowdrift = F)
rank(xreg)
prova <- auto.arima(y = ts(sales$Sales[dates<int.date], frequency = 7), xreg = as.matrix(xreg)[dates<int.date,], allowmean = F, allowdrift = F, order = c(1,0,1), seasonal = c(1,0,1))
prova <- Arima(y = ts(sales$Sales[dates<int.date], frequency = 7), xreg = as.matrix(xreg)[dates<int.date,], include.mean = F, order = c(1,0,1), seasonal = c(1,0,1))
prova <- Arima(y = ts(sales$Sales[dates<int.date], frequency = 7), xreg = as.matrix(xreg)[dates<int.date,], order = c(1,0,1), seasonal = c(1,0,1))
View(sales)
prova <- Arima(y = ts(sales$Sales[dates<int.date], frequency = 7), xreg = as.matrix(xreg)[dates<int.date,], order = c(1,0,1), include.mean = T, seasonal = c(1,0,1))
prova <- Arima(y = ts(log(sales$Sales[dates<int.date]), frequency = 7), xreg = as.matrix(xreg)[dates<int.date,], order = c(1,0,1), include.mean = T, seasonal = c(1,0,1))
fri <- c(1, sales$thr[-607])
prova <- Arima(y = ts(log(sales$Sales[dates<int.date]), frequency = 7), xreg = as.matrix(cbind(xreg, fri)[dates<int.date,]), order = c(1,0,1), include.mean = FALSE, seasonal = c(1,0,1))
prova <- auto.arima(y = ts(log(sales$Sales[dates<int.date]), frequency = 7), xreg = as.matrix(cbind(xreg, fri)[dates<int.date,]), allowmean = F, allowdrift = F)
prova <- auto.arima(y = ts(log(sales$Sales[dates<int.date]), frequency = 7), xreg = as.matrix(cbind(xreg, fri)[dates<int.date,]), allowmean = T, allowdrift)
setwd("C:/Users/fiamm/Documents/Dottorato/Tesi/CSARIMA/Latex/EJ/Major revisions/Replication package/Data")
sales <- read.table("sales.csv", header = T, sep = ",")
price <- read.table("price.csv", header = T, sep = ",")
dates <- as.Date(read.table("dates.csv", header = T)[,1])
dummies <- read.table("dummies.csv", header = T, sep = ",")
View(dummies)
# Using 'mapply' to vectorize over the lists
impact_store <- mapply(FUN = CausalARIMA, y = yy_store, xreg = xregg_store, order = order_store, seasonal = seasonal_store,
MoreArgs = list(dates = dates, int.date = int.date, auto = FALSE, nboot = 10000,
arima.args = list(include.mean = FALSE)), SIMPLIFY = FALSE)
# Using 'mapply' to vectorize over the lists
impact_store <- mapply(FUN = CausalArima, y = yy_store, xreg = xregg_store, order = order_store, seasonal = seasonal_store,
MoreArgs = list(dates = dates, int.date = int.date, auto = FALSE, nboot = 10000,
arima.args = list(include.mean = FALSE)), SIMPLIFY = FALSE)
y_store <- apply(sales[, grep(colnames(sales), pattern = "TP")], 2, log)
y_store_price <- apply(price[, grep(colnames(price), pattern = "TP")], 2, log)
# Creating lists of arguments to pass to 'mapply'
yy_store <- lapply(seq_len(ncol(y_store)), function(i) ts(y_store[,i], frequency = 7))
xregg_store <- lapply(seq_len(ncol(y_store_price)), function(i) cbind(price = y_store_price[,i], dummies))
order_store <- list(c(1,0,1), c(1,0,1), c(1,0,1), c(2,0,0), c(1,0,1), c(1,0,1), c(1,0,1), c(1,0,2),
c(1,0,1), c(3,0,0), c(1,0,1))
# Using 'mapply' to vectorize over the lists
impact_store <- mapply(FUN = CausalArima, y = yy_store, xreg = xregg_store, order = order_store, seasonal = seasonal_store,
MoreArgs = list(dates = dates, int.date = int.date, auto = FALSE, nboot = 10000,
arima.args = list(include.mean = FALSE)), SIMPLIFY = FALSE)
seasonal_store <- list(c(1,0,0), c(1,0,0), c(1,0,0), c(1,0,0), c(1,0,0), c(0,0,1), c(1,0,0), c(1,0,0),
c(1,0,0), c(1,0,1), c(1,0,1))
# Using 'mapply' to vectorize over the lists
impact_store <- mapply(FUN = CausalArima, y = yy_store, xreg = xregg_store, order = order_store, seasonal = seasonal_store,
MoreArgs = list(dates = dates, int.date = int.date, auto = FALSE, nboot = 10000,
arima.args = list(include.mean = FALSE)), SIMPLIFY = FALSE)
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
f
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
Q
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
# Using 'mapply' to vectorize over the lists
impact_store <- mapply(FUN = CausalArima, y = yy_store, xreg = xregg_store, order = order_store, seasonal = seasonal_store,
MoreArgs = list(dates = dates, int.date = int.date, auto = FALSE, nboot = 10000,
arima.args = list(include.mean = FALSE)), SIMPLIFY = FALSE)
summary(impact_store[[1]], horizon = as.Date(horizon))
horizon<-c("2018-11-04","2019-01-04","2019-04-30")
summary(impact_store[[1]], horizon = as.Date(horizon))
library(CausalArima)
data(sales)
y <- sales[, "Sales"]
dates <- as.Date(sales[, "Dates"])
int.date <- as.Date("2018-10-04")
xreg <- sales[, 3:12]
View(sales)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
det(xreg%*%t(xreg))
prova <- as.matrix(xreg) %*% t(as.matrix(xreg))
det(prova)
xreg <- sales[, 4:12]
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100, auto.args = list(ic = "bic", d = 0, D = 0))
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100, auto.args = list(d = 0, D = 0))
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
source("~/GitHub/CausalArima/R/CausalARIMA.R")
library(CausalArima)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), nboot = 100)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
dim(x2)
View(x2)
fit$coef
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
x2
xreg
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
head(v.tau)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), xreg = sales[,4])
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), xreg = sales[,4])
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), xreg = sales[,4])
dim(xreg1)
length(xreg1)
xreg <- as.matrix(xreg1)
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), xreg = sales[,4])
xreg1 <- as.matrix(xreg1)
prova <- apply(xreg1, 2, function(x)(x[!is.na(causal.effect.0)]))
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
source("~/GitHub/CausalArima/R/CausalARIMA.R")
## Example 2 (daily data, with predictors)
# Loading data and setting dates
data(sales)
y <- sales[, "Sales"]
dates <- as.Date(sales[, "Dates"])
int.date <- as.Date("2018-10-04")
xreg <- sales[, "Price"]
# Plot
oldpar <- par(no.readonly = TRUE)
par(mfrow = c(1,2))
plot(y = y, x = dates, type = "l", main = "Time series of daily sales")
abline(v = int.date, col = "red"); Acf(y, main = "Acf sales")
par(oldpar)
# Causal effect estimation
# The autocorrelation function indicates a weekly sesonal pattern
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
library(CausalArima)
## Example 2 (daily data, with predictors)
# Loading data and setting dates
data(sales)
y <- sales[, "Sales"]
dates <- as.Date(sales[, "Dates"])
int.date <- as.Date("2018-10-04")
xreg <- sales[, "Price"]
# Plot
oldpar <- par(no.readonly = TRUE)
par(mfrow = c(1,2))
plot(y = y, x = dates, type = "l", main = "Time series of daily sales")
abline(v = int.date, col = "red"); Acf(y, main = "Acf sales")
par(oldpar)
# Causal effect estimation
# The autocorrelation function indicates a weekly sesonal pattern
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
library(CausalArima)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, nboot = 100)
model$coef
xreg <- sales[,4:12]
dim(sales)
colnames(sales)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
model$coef
names(model$coef)
length(c)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
View(xreg1)
model$coef
View(model$xreg)
View(x1)
View(x2)
model
model.l
class(acvf)
head(acvf)
head(acf)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0))
ce$model$coef
source("~/GitHub/CausalArima/R/CausalARIMA.R")
library(CausalArima)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), nboot = 100)
xreg <- log(sales[, "Price"])
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), nboot = 100)
View(x1)
View(x2)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 1, D = 0), nboot = 100)
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0, allowmean = F), nboot = 100)
View(x1)
View(x2)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(y, frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0, allowmean = F), nboot = 1000)
View(boot1)
xreg <- cbdin(log(sales[,"Price"]),sales[,5:12])
xreg <- cbind(log(sales[,"Price"]),sales[,5:12])
head(y)
ce <- CausalArima(y = ts(log(y), frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), nboot = 1000)
View(boot1)
View(boot3)
length(tau)
tau[1]
pv1.l
head(boot)
head(boot < stat)
View(ce$norm$inf)
View(ce$boot$inf)
source("~/GitHub/CausalArima/R/CausalARIMA.R")
ce <- CausalArima(y = ts(log(y), frequency = 7), xreg = xreg, int.date = int.date,
dates = dates, auto.args = list(d = 0, D = 0), nboot = 1000)
v.delta[1]
plot(v.tau, type = "l")
plot(v.delta, type = "l")
plot(v.avg, type = "l")
plot(sqrt(v.tau), type = "l")
plot(sqrt(v.delta), type = "l")
plot(sqrt(v.avg), type = "l")
plot(sqrt(v.delta/seq(1,k,1)^2), type = "l")
source("~/GitHub/CausalArima/R/CausalARIMA.R")
summary(ce, type = "boot")
summary(ce, type = "boot", horizon = horizon)
summary(ce, type = "boot", horizon = c(as.Date("2018-11-01", "2019-01-01")))
int.date
summary(ce, type = "boot", horizon = c(as.Date("2019-01-01")))
print(ce, type = "boot", horizon = c(as.Date("2019-01-01")))
print(ce, type = "boot")
horizon<- as.Date(c("2018-11-04","2019-01-04","2019-04-30"))
print(ce, type = "boot")
print(ce, type = "boot", horizon = horizon)
summary(ce, type = "boot", horizon = horizon)
impact(ce, format = "html", style = kable_classic)
impact(ce)
source("~/GitHub/CausalArima/R/table_arima.R")
source("~/GitHub/CausalArima/R/plot_arima.R")
